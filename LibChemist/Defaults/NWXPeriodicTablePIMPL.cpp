/*
 * This file has been autogenerated by generate_atomicinfo.py.  Any
 * modifications made to this file will be lost next time generate_atomicinfo.py
 * is run.
 */

#include "LibChemist/Implementations/PeriodicTablePIMPL.hpp"

namespace LibChemist::detail_ {

class NWXPeriodicTablePIMPL : public PeriodicTablePIMPL {
public:
    NWXPeriodicTablePIMPL() = default;

protected:
    using my_type                             = NWXPeriodicTablePIMPL;
    NWXPeriodicTablePIMPL(const my_type& rhs) = default;

private:
    std::unique_ptr<PeriodicTablePIMPL> clone_() const override {
        return std::unique_ptr<my_type>(new my_type(*this));
    }

    size_type max_Z_() const noexcept override { return 118; }

    Atom get_atom_(size_type Z) const override {
        switch(Z) {
            case(0): {
                return Atom(0ul, 0.0, "Ez");
            }
            case(1): {
                return Atom(1ul, 1837.4260218693814, "H");
            }
            case(2): {
                return Atom(2ul, 7296.297100609073, "He");
            }
            case(3): {
                return Atom(3ul, 12700.97552754276, "Li");
            }
            case(4): {
                return Atom(4ul, 16428.204808444127, "Be");
            }
            case(5): {
                return Atom(5ul, 19711.80464543719, "B");
            }
            case(6): {
                return Atom(6ul, 21893.984452257635, "C");
            }
            case(7): {
                return Atom(7ul, 25532.934707260847, "N");
            }
            case(8): {
                return Atom(8ul, 29165.122045980286, "O");
            }
            case(9): {
                return Atom(9ul, 34631.97038186638, "F");
            }
            case(10): {
                return Atom(10ul, 36785.3427848087, "Ne");
            }
            case(11): {
                return Atom(11ul, 41907.785720722546, "Na");
            }
            case(12): {
                return Atom(12ul, 44306.21610113965, "Mg");
            }
            case(13): {
                return Atom(13ul, 49184.335871396164, "Al");
            }
            case(14): {
                return Atom(14ul, 51195.823134702325, "Si");
            }
            case(15): {
                return Atom(15ul, 56461.71412020552, "P");
            }
            case(16): {
                return Atom(16ul, 58455.476530961954, "S");
            }
            case(17): {
                return Atom(17ul, 64624.13116823568, "Cl");
            }
            case(18): {
                return Atom(18ul, 72820.74924639802, "Ar");
            }
            case(19): {
                return Atom(19ul, 71271.84089968068, "K");
            }
            case(20): {
                return Atom(20ul, 73057.72474960299, "Ca");
            }
            case(21): {
                return Atom(21ul, 81949.60707950682, "Sc");
            }
            case(22): {
                return Atom(22ul, 87256.20316855246, "Ti");
            }
            case(23): {
                return Atom(23ul, 92860.67381934977, "V");
            }
            case(24): {
                return Atom(24ul, 94783.09201688785, "Cr");
            }
            case(25): {
                return Atom(25ul, 100145.9278615095, "Mn");
            }
            case(26): {
                return Atom(26ul, 101799.20751139225, "Fe");
            }
            case(27): {
                return Atom(27ul, 107428.64079711946, "Co");
            }
            case(28): {
                return Atom(28ul, 106991.52307546153, "Ni");
            }
            case(29): {
                return Atom(29ul, 115837.27174355683, "Cu");
            }
            case(30): {
                return Atom(30ul, 119180.44922723295, "Zn");
            }
            case(31): {
                return Atom(31ul, 127097.25392276482, "Ga");
            }
            case(32): {
                return Atom(32ul, 132396.39075212495, "Ge");
            }
            case(33): {
                return Atom(33ul, 136573.71289264012, "As");
            }
            case(34): {
                return Atom(34ul, 143955.32664306843, "Se");
            }
            case(35): {
                return Atom(35ul, 145656.08160068557, "Br");
            }
            case(36): {
                return Atom(36ul, 152754.40936591724, "Kr");
            }
            case(37): {
                return Atom(37ul, 155798.26856016062, "Rb");
            }
            case(38): {
                return Atom(38ul, 159721.48916014304, "Sr");
            }
            case(39): {
                return Atom(39ul, 162065.43209122817, "Y");
            }
            case(40): {
                return Atom(40ul, 166291.17926437902, "Zr");
            }
            case(41): {
                return Atom(41ul, 169357.95216689384, "Nb");
            }
            case(42): {
                return Atom(42ul, 174906.15025012242, "Mo");
            }
            case(43): {
                return Atom(43ul, 0.0, "Tc");
            }
            case(44): {
                return Atom(44ul, 184239.33929942542, "Ru");
            }
            case(45): {
                return Atom(45ul, 187585.25111583088, "Rh");
            }
            case(46): {
                return Atom(46ul, 193991.79270055264, "Pd");
            }
            case(47): {
                return Atom(47ul, 196631.6998062559, "Ag");
            }
            case(48): {
                return Atom(48ul, 204918.1862867875, "Cd");
            }
            case(49): {
                return Atom(49ul, 209300.41020759306, "In");
            }
            case(50): {
                return Atom(50ul, 216395.0921958523, "Sn");
            }
            case(51): {
                return Atom(51ul, 221954.90207873794, "Sb");
            }
            case(52): {
                return Atom(52ul, 232600.5708380992, "Te");
            }
            case(53): {
                return Atom(53ul, 231332.6972092981, "I");
            }
            case(54): {
                return Atom(54ul, 239332.49801760627, "Xe");
            }
            case(55): {
                return Atom(55ul, 242271.81813002797, "Cs");
            }
            case(56): {
                return Atom(56ul, 250331.80714328878, "Ba");
            }
            case(57): {
                return Atom(57ul, 253209.1819320883, "La");
            }
            case(58): {
                return Atom(58ul, 255415.84313127832, "Ce");
            }
            case(59): {
                return Atom(59ul, 256858.95103025704, "Pr");
            }
            case(60): {
                return Atom(60ul, 262937.0810253065, "Nd");
            }
            case(61): {
                return Atom(61ul, 0.0, "Pm");
            }
            case(62): {
                return Atom(62ul, 274089.5127838292, "Sm");
            }
            case(63): {
                return Atom(63ul, 277013.4259156811, "Eu");
            }
            case(64): {
                return Atom(64ul, 286649.214453692, "Gd");
            }
            case(65): {
                return Atom(65ul, 289703.1906790338, "Tb");
            }
            case(66): {
                return Atom(66ul, 296219.3790062, "Dy");
            }
            case(67): {
                return Atom(67ul, 300649.599580847, "Ho");
            }
            case(68): {
                return Atom(68ul, 304894.5053119877, "Er");
            }
            case(69): {
                return Atom(69ul, 307948.24456182634, "Tm");
            }
            case(70): {
                return Atom(70ul, 315441.7380930946, "Yb");
            }
            case(71): {
                return Atom(71ul, 318944.9651858584, "Lu");
            }
            case(72): {
                return Atom(72ul, 325367.3659004101, "Hf");
            }
            case(73): {
                return Atom(73ul, 329847.80705285165, "Ta");
            }
            case(74): {
                return Atom(74ul, 335119.8193015373, "W");
            }
            case(75): {
                return Atom(75ul, 339434.5963483537, "Re");
            }
            case(76): {
                return Atom(76ul, 346768.07672830415, "Os");
            }
            case(77): {
                return Atom(77ul, 350390.1561503677, "Ir");
            }
            case(78): {
                return Atom(78ul, 355616.37744028016, "Pt");
            }
            case(79): {
                return Atom(79ul, 359048.0907948421, "Au");
            }
            case(80): {
                return Atom(80ul, 365656.8472222257, "Hg");
            }
            case(81): {
                return Atom(81ul, 372568.3289176226, "Tl");
            }
            case(82): {
                return Atom(82ul, 377702.4943389824, "Pb");
            }
            case(83): {
                return Atom(83ul, 380947.9649997987, "Bi");
            }
            case(84): {
                return Atom(84ul, 0.0, "Po");
            }
            case(85): {
                return Atom(85ul, 0.0, "At");
            }
            case(86): {
                return Atom(86ul, 0.0, "Rn");
            }
            case(87): {
                return Atom(87ul, 0.0, "Fr");
            }
            case(88): {
                return Atom(88ul, 0.0, "Ra");
            }
            case(89): {
                return Atom(89ul, 0.0, "Ac");
            }
            case(90): {
                return Atom(90ul, 422978.85169247346, "Th");
            }
            case(91): {
                return Atom(91ul, 421152.64554923656, "Pa");
            }
            case(92): {
                return Atom(92ul, 433900.1594198318, "U");
            }
            case(93): {
                return Atom(93ul, 0.0, "Np");
            }
            case(94): {
                return Atom(94ul, 0.0, "Pu");
            }
            case(95): {
                return Atom(95ul, 0.0, "Am");
            }
            case(96): {
                return Atom(96ul, 0.0, "Cm");
            }
            case(97): {
                return Atom(97ul, 0.0, "Bk");
            }
            case(98): {
                return Atom(98ul, 0.0, "Cf");
            }
            case(99): {
                return Atom(99ul, 0.0, "Es");
            }
            case(100): {
                return Atom(100ul, 0.0, "Fm");
            }
            case(101): {
                return Atom(101ul, 0.0, "Md");
            }
            case(102): {
                return Atom(102ul, 0.0, "No");
            }
            case(103): {
                return Atom(103ul, 0.0, "Lr");
            }
            case(104): {
                return Atom(104ul, 0.0, "Rf");
            }
            case(105): {
                return Atom(105ul, 0.0, "Db");
            }
            case(106): {
                return Atom(106ul, 0.0, "Sg");
            }
            case(107): {
                return Atom(107ul, 0.0, "Bh");
            }
            case(108): {
                return Atom(108ul, 0.0, "Hs");
            }
            case(109): {
                return Atom(109ul, 0.0, "Mt");
            }
            case(110): {
                return Atom(110ul, 0.0, "Ds");
            }
            case(111): {
                return Atom(111ul, 0.0, "Rg");
            }
            case(112): {
                return Atom(112ul, 0.0, "Cn");
            }
            case(113): {
                return Atom(113ul, 0.0, "Nh");
            }
            case(114): {
                return Atom(114ul, 0.0, "Fl");
            }
            case(115): {
                return Atom(115ul, 0.0, "Mc");
            }
            case(116): {
                return Atom(116ul, 0.0, "Lv");
            }
            case(117): {
                return Atom(117ul, 0.0, "Ts");
            }
            case(118): {
                return Atom(118ul, 0.0, "Og");
            }
            default: { throw std::out_of_range(" Z > 118"); }
        }
    }

    Atom get_isotope_(size_type Z, size_type mass_num) const override {
        switch(Z) {
            case(0): {
                switch(mass_num) {}
            }
            case(1): {
                switch(mass_num) {
                    case(1): {
                        return Atom(1ul, 1837.1526472934618, "H");
                    }
                    case(2): {
                        return Atom(1ul, 3671.4829413173247, "H");
                    }
                }
            }
            case(2): {
                switch(mass_num) {
                    case(3): {
                        return Atom(2ul, 5497.885121445487, "He");
                    }
                    case(4): {
                        return Atom(2ul, 7296.299386693523, "He");
                    }
                }
            }
            case(3): {
                switch(mass_num) {
                    case(6): {
                        return Atom(3ul, 10964.898253742283, "Li");
                    }
                    case(7): {
                        return Atom(3ul, 12789.391889859466, "Li");
                    }
                }
            }
            case(4): {
                switch(mass_num) {
                    case(9): {
                        return Atom(4ul, 16428.204808444127, "Be");
                    }
                }
            }
            case(5): {
                switch(mass_num) {
                    case(10): {
                        return Atom(5ul, 18252.467570265868, "B");
                    }
                    case(11): {
                        return Atom(5ul, 20068.735325476016, "B");
                    }
                    case(13): {
                        return Atom(5ul, 23703.665810590574, "B");
                    }
                }
            }
            case(6): {
                switch(mass_num) {}
            }
            case(7): {
                switch(mass_num) {
                    case(14): {
                        return Atom(7ul, 25526.04237318611, "N");
                    }
                    case(15): {
                        return Atom(7ul, 27343.52580361326, "N");
                    }
                }
            }
            case(8): {
                switch(mass_num) {
                    case(16): {
                        return Atom(8ul, 29156.94569842209, "O");
                    }
                    case(17): {
                        return Atom(8ul, 30987.521555096086, "O");
                    }
                    case(18): {
                        return Atom(8ul, 32810.46081966976, "O");
                    }
                }
            }
            case(9): {
                switch(mass_num) {
                    case(19): {
                        return Atom(9ul, 34631.97038186638, "F");
                    }
                }
            }
            case(10): {
                switch(mass_num) {
                    case(20): {
                        return Atom(10ul, 36443.989015004314, "Ne");
                    }
                    case(21): {
                        return Atom(10ul, 38269.44143030991, "Ne");
                    }
                    case(22): {
                        return Atom(10ul, 40087.8426942043, "Ne");
                    }
                }
            }
            case(11): {
                switch(mass_num) {
                    case(23): {
                        return Atom(11ul, 41907.785720722546, "Na");
                    }
                }
            }
            case(12): {
                switch(mass_num) {
                    case(24): {
                        return Atom(12ul, 43722.056355764995, "Mg");
                    }
                    case(25): {
                        return Atom(12ul, 45546.39458517006, "Mg");
                    }
                    case(26): {
                        return Atom(12ul, 47363.36962111286, "Mg");
                    }
                }
            }
            case(13): {
                switch(mass_num) {
                    case(27): {
                        return Atom(13ul, 49184.335871396164, "Al");
                    }
                }
            }
            case(14): {
                switch(mass_num) {
                    case(28): {
                        return Atom(14ul, 50998.81725969095, "Si");
                    }
                    case(29): {
                        return Atom(14ul, 52820.91849503242, "Si");
                    }
                    case(30): {
                        return Atom(14ul, 54638.84023899607, "Si");
                    }
                }
            }
            case(15): {
                switch(mass_num) {
                    case(31): {
                        return Atom(15ul, 56461.71412020552, "P");
                    }
                }
            }
            case(16): {
                switch(mass_num) {
                    case(32): {
                        return Atom(16ul, 58281.520422795744, "S");
                    }
                    case(33): {
                        return Atom(16ul, 60103.292819991635, "S");
                    }
                    case(34): {
                        return Atom(16ul, 61919.63365480119, "S");
                    }
                    case(36): {
                        return Atom(16ul, 65563.97783683505, "S");
                    }
                }
            }
            case(17): {
                switch(mass_num) {
                    case(35): {
                        return Atom(17ul, 63744.31896217403, "Cl");
                    }
                    case(37): {
                        return Atom(17ul, 67384.71823123492, "Cl");
                    }
                }
            }
            case(18): {
                switch(mass_num) {
                    case(36): {
                        return Atom(18ul, 65564.8238393815, "Ar");
                    }
                    case(38): {
                        return Atom(18ul, 69201.8270671926, "Ar");
                    }
                    case(40): {
                        return Atom(18ul, 72846.96807024154, "Ar");
                    }
                }
            }
            case(19): {
                switch(mass_num) {
                    case(39): {
                        return Atom(19ul, 71026.49193998551, "K");
                    }
                    case(40): {
                        return Atom(19ul, 72849.91218097782, "K");
                    }
                    case(41): {
                        return Atom(19ul, 74668.83963986262, "K");
                    }
                }
            }
            case(20): {
                switch(mass_num) {
                    case(40): {
                        return Atom(20ul, 72847.3468300112, "Ca");
                    }
                    case(42): {
                        return Atom(20ul, 76485.8816487284, "Ca");
                    }
                    case(43): {
                        return Atom(20ul, 78309.03992241636, "Ca");
                    }
                    case(44): {
                        return Atom(20ul, 80125.94204281972, "Ca");
                    }
                    case(46): {
                        return Atom(20ul, 83768.45239903645, "Ca");
                    }
                    case(48): {
                        return Atom(20ul, 87412.10169597936, "Ca");
                    }
                }
            }
            case(21): {
                switch(mass_num) {
                    case(45): {
                        return Atom(21ul, 81949.60707950682, "Sc");
                    }
                }
            }
            case(22): {
                switch(mass_num) {
                    case(46): {
                        return Atom(22ul, 83766.5164914641, "Ti");
                    }
                    case(47): {
                        return Atom(22ul, 85587.82088756163, "Ti");
                    }
                    case(48): {
                        return Atom(22ul, 87403.75140840182, "Ti");
                    }
                    case(49): {
                        return Atom(22ul, 89226.50135506886, "Ti");
                    }
                    case(50): {
                        return Atom(22ul, 91043.77716761189, "Ti");
                    }
                }
            }
            case(23): {
                switch(mass_num) {
                    case(50): {
                        return Atom(23ul, 91048.09559043567, "V");
                    }
                    case(51): {
                        return Atom(23ul, 92865.15265636034, "V");
                    }
                }
            }
            case(24): {
                switch(mass_num) {
                    case(50): {
                        return Atom(24ul, 91046.06489266205, "Cr");
                    }
                    case(52): {
                        return Atom(24ul, 94681.7503543865, "Cr");
                    }
                    case(53): {
                        return Atom(24ul, 96504.89769074354, "Cr");
                    }
                    case(54): {
                        return Atom(24ul, 98324.56148720346, "Cr");
                    }
                }
            }
            case(25): {
                switch(mass_num) {
                    case(55): {
                        return Atom(25ul, 100145.9278615095, "Mn");
                    }
                }
            }
            case(26): {
                switch(mass_num) {
                    case(54): {
                        return Atom(26ul, 98325.89219579838, "Fe");
                    }
                    case(56): {
                        return Atom(26ul, 101963.1508102864, "Fe");
                    }
                    case(57): {
                        return Atom(26ul, 103786.8723565166, "Fe");
                    }
                    case(58): {
                        return Atom(26ul, 105605.89814200635, "Fe");
                    }
                }
            }
            case(27): {
                switch(mass_num) {
                    case(59): {
                        return Atom(27ul, 107428.64079711946, "Co");
                    }
                }
            }
            case(28): {
                switch(mass_num) {
                    case(58): {
                        return Atom(28ul, 105609.6678753958, "Ni");
                    }
                    case(60): {
                        return Atom(28ul, 109247.1397678367, "Ni");
                    }
                    case(61): {
                        return Atom(28ul, 111070.52043391998, "Ni");
                    }
                    case(62): {
                        return Atom(28ul, 112888.46706942591, "Ni");
                    }
                    case(64): {
                        return Atom(28ul, 116533.55498996214, "Ni");
                    }
                }
            }
            case(29): {
                switch(mass_num) {
                    case(63): {
                        return Atom(29ul, 114713.63963489111, "Cu");
                    }
                    case(65): {
                        return Atom(29ul, 118356.12082489209, "Cu");
                    }
                }
            }
            case(30): {
                switch(mass_num) {
                    case(64): {
                        return Atom(30ul, 116535.69688393341, "Zn");
                    }
                    case(66): {
                        return Atom(30ul, 120175.80831890233, "Zn");
                    }
                    case(67): {
                        return Atom(30ul, 122000.69104509821, "Zn");
                    }
                    case(68): {
                        return Atom(30ul, 123819.41787687625, "Zn");
                    }
                    case(70): {
                        return Atom(30ul, 127466.06072129119, "Zn");
                    }
                }
            }
            case(31): {
                switch(mass_num) {
                    case(69): {
                        return Atom(31ul, 125643.63524877468, "Ga");
                    }
                    case(71): {
                        return Atom(31ul, 129287.8244852872, "Ga");
                    }
                }
            }
            case(32): {
                switch(mass_num) {
                    case(70): {
                        return Atom(32ul, 127464.10840772248, "Ge");
                    }
                    case(72): {
                        return Atom(32ul, 131105.9238788483, "Ge");
                    }
                    case(73): {
                        return Atom(32ul, 132931.33378439437, "Ge");
                    }
                    case(74): {
                        return Atom(32ul, 134750.06382445616, "Ge");
                    }
                    case(76): {
                        return Atom(32ul, 138396.25083737622, "Ge");
                    }
                }
            }
            case(33): {
                switch(mass_num) {
                    case(75): {
                        return Atom(33ul, 136573.71289264012, "As");
                    }
                }
            }
            case(34): {
                switch(mass_num) {
                    case(74): {
                        return Atom(34ul, 134752.4301889156, "Se");
                    }
                    case(76): {
                        return Atom(34ul, 138392.26053447995, "Se");
                    }
                    case(77): {
                        return Atom(34ul, 140216.42595405653, "Se");
                    }
                    case(78): {
                        return Atom(34ul, 142034.56545116432, "Se");
                    }
                    case(80): {
                        return Atom(34ul, 145678.90781030967, "Se");
                    }
                    case(82): {
                        return Atom(34ul, 149325.00925684423, "Se");
                    }
                }
            }
            case(35): {
                switch(mass_num) {
                    case(79): {
                        return Atom(35ul, 143859.3296896086, "Br");
                    }
                    case(81): {
                        return Atom(35ul, 147501.37338637287, "Br");
                    }
                }
            }
            case(36): {
                switch(mass_num) {
                    case(78): {
                        return Atom(36ul, 142040.1361983781, "Kr");
                    }
                    case(80): {
                        return Atom(36ul, 145678.64531436766, "Kr");
                    }
                    case(82): {
                        return Atom(36ul, 149319.14502458414, "Kr");
                    }
                    case(83): {
                        return Atom(36ul, 151143.20745096123, "Kr");
                    }
                    case(84): {
                        return Atom(36ul, 152961.30307114313, "Kr");
                    }
                    case(86): {
                        return Atom(36ul, 156605.46295915105, "Kr");
                    }
                }
            }
            case(37): {
                switch(mass_num) {
                    case(85): {
                        return Atom(37ul, 154784.723859002, "Rb");
                    }
                    case(87): {
                        return Atom(37ul, 158425.74453251893, "Rb");
                    }
                }
            }
            case(38): {
                switch(mass_num) {
                    case(84): {
                        return Atom(38ul, 152964.80533210502, "Sr");
                    }
                    case(86): {
                        return Atom(38ul, 156603.00273416343, "Sr");
                    }
                    case(87): {
                        return Atom(38ul, 158425.19305406522, "Sr");
                    }
                    case(88): {
                        return Atom(38ul, 160242.1298093498, "Sr");
                    }
                }
            }
            case(39): {
                switch(mass_num) {
                    case(89): {
                        return Atom(39ul, 162065.43209122817, "Y");
                    }
                }
            }
            case(40): {
                switch(mass_num) {
                    case(90): {
                        return Atom(40ul, 163886.24248454592, "Zr");
                    }
                    case(91): {
                        return Atom(40ul, 165710.84448591495, "Zr");
                    }
                    case(92): {
                        return Atom(40ul, 167532.62101013036, "Zr");
                    }
                    case(94): {
                        return Atom(40ul, 171180.7312797767, "Zr");
                    }
                    case(96): {
                        return Atom(40ul, 174830.08111359362, "Zr");
                    }
                }
            }
            case(41): {
                switch(mass_num) {
                    case(93): {
                        return Atom(41ul, 169357.95216689384, "Nb");
                    }
                }
            }
            case(42): {
                switch(mass_num) {
                    case(92): {
                        return Atom(42ul, 167535.8621058588, "Mo");
                    }
                    case(94): {
                        return Atom(42ul, 171178.49824138108, "Mo");
                    }
                    case(95): {
                        return Atom(42ul, 173002.7611854917, "Mo");
                    }
                    case(96): {
                        return Atom(42ul, 174823.52965237424, "Mo");
                    }
                    case(97): {
                        return Atom(42ul, 176648.86445491473, "Mo");
                    }
                    case(98): {
                        return Atom(42ul, 178470.63551046466, "Mo");
                    }
                    case(100): {
                        return Atom(42ul, 182120.18039334964, "Mo");
                    }
                }
            }
            case(43): {
                switch(mass_num) {
                    case(98): {
                        return Atom(43ul, 178473.92582418225, "Tc");
                    }
                }
            }
            case(44): {
                switch(mass_num) {
                    case(96): {
                        return Atom(44ul, 174828.841549423, "Ru");
                    }
                    case(98): {
                        return Atom(44ul, 178470.42587828875, "Ru");
                    }
                    case(99): {
                        return Atom(44ul, 180294.48830466587, "Ru");
                    }
                    case(100): {
                        return Atom(44ul, 182114.2414226616, "Ru");
                    }
                    case(101): {
                        return Atom(44ul, 183939.61450586029, "Ru");
                    }
                    case(102): {
                        return Atom(44ul, 185760.2553705488, "Ru");
                    }
                    case(104): {
                        return Atom(44ul, 189408.01199982883, "Ru");
                    }
                }
            }
            case(45): {
                switch(mass_num) {
                    case(103): {
                        return Atom(45ul, 187585.25111583088, "Rh");
                    }
                }
            }
            case(46): {
                switch(mass_num) {
                    case(102): {
                        return Atom(46ul, 185762.5449184875, "Pd");
                    }
                    case(104): {
                        return Atom(46ul, 189405.46177883664, "Pd");
                    }
                    case(105): {
                        return Atom(46ul, 191230.26247505067, "Pd");
                    }
                    case(106): {
                        return Atom(46ul, 193050.23433966475, "Pd");
                    }
                    case(108): {
                        return Atom(46ul, 196696.76234210507, "Pd");
                    }
                    case(110): {
                        return Atom(46ul, 200344.87261175137, "Pd");
                    }
                }
            }
            case(47): {
                switch(mass_num) {
                    case(107): {
                        return Atom(47ul, 194876.05767631953, "Ag");
                    }
                    case(109): {
                        return Atom(47ul, 198521.22398106064, "Ag");
                    }
                }
            }
            case(48): {
                switch(mass_num) {
                    case(106): {
                        return Atom(48ul, 193055.6665473536, "Cd");
                    }
                    case(108): {
                        return Atom(48ul, 196697.29280265456, "Cd");
                    }
                    case(110): {
                        return Atom(48ul, 200340.9260581788, "Cd");
                    }
                    case(111): {
                        return Atom(48ul, 202165.95826123055, "Cd");
                    }
                    case(112): {
                        return Atom(48ul, 203986.25824577216, "Cd");
                    }
                    case(113): {
                        return Atom(48ul, 205812.14538352395, "Cd");
                    }
                    case(114): {
                        return Atom(48ul, 207633.13259702484, "Cd");
                    }
                    case(116): {
                        return Atom(48ul, 211281.45796751254, "Cd");
                    }
                }
            }
            case(49): {
                switch(mass_num) {
                    case(113): {
                        return Atom(49ul, 205811.5146641077, "In");
                    }
                    case(115): {
                        return Atom(49ul, 209456.95764686327, "In");
                    }
                }
            }
            case(50): {
                switch(mass_num) {
                    case(112): {
                        return Atom(50ul, 203990.0152189422, "Sn");
                    }
                    case(114): {
                        return Atom(50ul, 207632.0716759259, "Sn");
                    }
                    case(115): {
                        return Atom(50ul, 209455.98407858057, "Sn");
                    }
                    case(116): {
                        return Atom(50ul, 211275.95284428424, "Sn");
                    }
                    case(117): {
                        return Atom(50ul, 213101.048848433, "Sn");
                    }
                    case(118): {
                        return Atom(50ul, 214921.48190383412, "Sn");
                    }
                    case(119): {
                        return Atom(50ul, 216747.4765920066, "Sn");
                    }
                    case(120): {
                        return Atom(50ul, 218568.3434948674, "Sn");
                    }
                    case(122): {
                        return Atom(50ul, 222216.3772031973, "Sn");
                    }
                    case(124): {
                        return Atom(50ul, 225865.50282173045, "Sn");
                    }
                }
            }
            case(51): {
                switch(mass_num) {
                    case(121): {
                        return Atom(51ul, 220394.1631857452, "Sb");
                    }
                    case(123): {
                        return Atom(51ul, 224040.6693135237, "Sb");
                    }
                }
            }
            case(52): {
                switch(mass_num) {
                    case(120): {
                        return Atom(52ul, 218571.73042167476, "Te");
                    }
                    case(122): {
                        return Atom(52ul, 222215.64804780285, "Te");
                    }
                    case(123): {
                        return Atom(52ul, 224040.77868683284, "Te");
                    }
                    case(124): {
                        return Atom(52ul, 225861.02398471988, "Te");
                    }
                    case(125): {
                        return Atom(52ul, 227686.84732137466, "Te");
                    }
                    case(126): {
                        return Atom(52ul, 229507.6941724621, "Te");
                    }
                    case(128): {
                        return Atom(52ul, 233155.5692894937, "Te");
                    }
                    case(130): {
                        return Atom(52ul, 236804.5577356683, "Te");
                    }
                }
            }
            case(53): {
                switch(mass_num) {
                    case(127): {
                        return Atom(53ul, 231332.6972092981, "I");
                    }
                }
            }
            case(54): {
                switch(mass_num) {
                    case(124): {
                        return Atom(54ul, 225866.6202523725, "Xe");
                    }
                    case(126): {
                        return Atom(54ul, 229509.49883206346, "Xe");
                    }
                    case(128): {
                        return Atom(54ul, 233153.87400320155, "Xe");
                    }
                    case(129): {
                        return Atom(54ul, 234979.0408447969, "Xe");
                    }
                    case(130): {
                        return Atom(54ul, 236799.61160119422, "Xe");
                    }
                    case(131): {
                        return Atom(54ul, 238625.37040759658, "Xe");
                    }
                    case(132): {
                        return Atom(54ul, 240446.5655944449, "Xe");
                    }
                    case(134): {
                        return Atom(54ul, 244094.6027844918, "Xe");
                    }
                    case(136): {
                        return Atom(54ul, 247743.69646601865, "Xe");
                    }
                }
            }
            case(55): {
                switch(mass_num) {
                    case(133): {
                        return Atom(55ul, 242271.81813002797, "Cs");
                    }
                }
            }
            case(56): {
                switch(mass_num) {
                    case(130): {
                        return Atom(56ul, 236804.73501157353, "Ba");
                    }
                    case(132): {
                        return Atom(56ul, 240448.2169673534, "Ba");
                    }
                    case(134): {
                        return Atom(56ul, 244092.98588240455, "Ba");
                    }
                    case(135): {
                        return Atom(56ul, 245918.02537701026, "Ba");
                    }
                    case(136): {
                        return Atom(56ul, 247738.88681120562, "Ba");
                    }
                    case(137): {
                        return Atom(56ul, 249564.05573089383, "Ba");
                    }
                    case(138): {
                        return Atom(56ul, 251385.88694176386, "Ba");
                    }
                }
            }
            case(57): {
                switch(mass_num) {
                    case(138): {
                        return Atom(57ul, 251389.30121189848, "La");
                    }
                    case(139): {
                        return Atom(57ul, 253210.80430284102, "La");
                    }
                }
            }
            case(58): {
                switch(mass_num) {
                    case(136): {
                        return Atom(58ul, 247743.54064551086, "Ce");
                    }
                    case(138): {
                        return Atom(58ul, 251387.24134790912, "Ce");
                    }
                    case(140): {
                        return Atom(58ul, 255032.0157316257, "Ce");
                    }
                    case(142): {
                        return Atom(58ul, 258684.73790914207, "Ce");
                    }
                }
            }
            case(59): {
                switch(mass_num) {
                    case(141): {
                        return Atom(59ul, 256858.95103025704, "Pr");
                    }
                }
            }
            case(60): {
                switch(mass_num) {
                    case(142): {
                        return Atom(60ul, 258681.96711864305, "Nd");
                    }
                    case(143): {
                        return Atom(60ul, 260508.6654417712, "Nd");
                    }
                    case(144): {
                        return Atom(60ul, 262332.04610785446, "Nd");
                    }
                    case(145): {
                        return Atom(60ul, 264159.4735863771, "Nd");
                    }
                    case(146): {
                        return Atom(60ul, 265983.3464323516, "Nd");
                    }
                    case(148): {
                        return Atom(60ul, 269636.01392321347, "Nd");
                    }
                    case(150): {
                        return Atom(60ul, 273289.0824495422, "Nd");
                    }
                }
            }
            case(61): {
                switch(mass_num) {
                    case(145): {
                        return Atom(61ul, 264159.8017063046, "Pm");
                    }
                }
            }
            case(62): {
                switch(mass_num) {
                    case(144): {
                        return Atom(62ul, 262335.546053748, "Sm");
                    }
                    case(147): {
                        return Atom(62ul, 267809.479660049, "Sm");
                    }
                    case(148): {
                        return Atom(62ul, 269632.24054404703, "Sm");
                    }
                    case(149): {
                        return Atom(62ul, 271459.43104706646, "Sm");
                    }
                    case(150): {
                        return Atom(62ul, 273282.4835932222, "Sm");
                    }
                    case(152): {
                        return Atom(62ul, 276932.74487128225, "Sm");
                    }
                    case(154): {
                        return Atom(62ul, 280583.04260711203, "Sm");
                    }
                }
            }
            case(63): {
                switch(mass_num) {
                    case(151): {
                        return Atom(63ul, 275110.0751317086, "Eu");
                    }
                    case(153): {
                        return Atom(63ul, 278758.36769020354, "Eu");
                    }
                }
            }
            case(64): {
                switch(mass_num) {
                    case(152): {
                        return Atom(64ul, 276932.85424459144, "Gd");
                    }
                    case(154): {
                        return Atom(64ul, 280580.5817076556, "Gd");
                    }
                    case(155): {
                        return Atom(64ul, 282406.67847758334, "Gd");
                    }
                    case(156): {
                        return Atom(64ul, 284228.6555195323, "Gd");
                    }
                    case(157): {
                        return Atom(64ul, 286054.89812053886, "Gd");
                    }
                    case(158): {
                        return Atom(64ul, 287878.04181111895, "Gd");
                    }
                    case(160): {
                        return Atom(64ul, 291529.1963045372, "Gd");
                    }
                }
            }
            case(65): {
                switch(mass_num) {
                    case(159): {
                        return Atom(65ul, 289703.1906790338, "Tb");
                    }
                }
            }
            case(66): {
                switch(mass_num) {
                    case(156): {
                        return Atom(66ul, 284232.5747297776, "Dy");
                    }
                    case(158): {
                        return Atom(66ul, 287878.6069065496, "Dy");
                    }
                    case(160): {
                        return Atom(66ul, 291525.80573195283, "Dy");
                    }
                    case(161): {
                        return Atom(66ul, 293351.86604411085, "Dy");
                    }
                    case(162): {
                        return Atom(66ul, 295174.5175547996, "Dy");
                    }
                    case(163): {
                        return Atom(66ul, 297000.92421577, "Dy");
                    }
                    case(164): {
                        return Atom(66ul, 298824.6147728959, "Dy");
                    }
                }
            }
            case(67): {
                switch(mass_num) {
                    case(165): {
                        return Atom(67ul, 300649.599580847, "Ho");
                    }
                }
            }
            case(68): {
                switch(mass_num) {
                    case(162): {
                        return Atom(68ul, 295178.1268740023, "Er");
                    }
                    case(164): {
                        return Atom(68ul, 298824.6694595505, "Er");
                    }
                    case(166): {
                        return Atom(68ul, 302472.4333803844, "Er");
                    }
                    case(167): {
                        return Atom(68ul, 304298.51192142727, "Er");
                    }
                    case(168): {
                        return Atom(68ul, 306122.0019608197, "Er");
                    }
                    case(170): {
                        return Atom(68ul, 309773.41165862605, "Er");
                    }
                }
            }
            case(69): {
                switch(mass_num) {
                    case(169): {
                        return Atom(69ul, 307948.24456182634, "Tm");
                    }
                }
            }
            case(70): {
                switch(mass_num) {
                    case(168): {
                        return Atom(70ul, 306124.75452243385, "Yb");
                    }
                    case(170): {
                        return Atom(70ul, 309772.1356366857, "Yb");
                    }
                    case(171): {
                        return Atom(70ul, 311597.8678289162, "Yb");
                    }
                    case(172): {
                        return Atom(70ul, 313420.86568841734, "Yb");
                    }
                    case(173): {
                        return Atom(70ul, 315247.0900605391, "Yb");
                    }
                    case(174): {
                        return Atom(70ul, 317071.1634242471, "Yb");
                    }
                    case(176): {
                        return Atom(70ul, 320723.7033129149, "Yb");
                    }
                }
            }
            case(71): {
                switch(mass_num) {
                    case(175): {
                        return Atom(71ul, 318897.53362744773, "Lu");
                    }
                    case(176): {
                        return Atom(71ul, 320723.90383064834, "Lu");
                    }
                }
            }
            case(72): {
                switch(mass_num) {
                    case(174): {
                        return Atom(72ul, 317073.3144326608, "Hf");
                    }
                    case(176): {
                        return Atom(72ul, 320721.570533386, "Hf");
                    }
                    case(177): {
                        return Atom(72ul, 322547.7766766229, "Hf");
                    }
                    case(178): {
                        return Atom(72ul, 324371.5401492883, "Hf");
                    }
                    case(179): {
                        return Atom(72ul, 326198.2749301861, "Hf");
                    }
                    case(180): {
                        return Atom(72ul, 328022.5123538579, "Hf");
                    }
                }
            }
            case(73): {
                switch(mass_num) {
                    case(180): {
                        return Atom(73ul, 328024.1529534955, "Ta");
                    }
                    case(181): {
                        return Atom(73ul, 329848.02579947, "Ta");
                    }
                }
            }
            case(74): {
                switch(mass_num) {
                    case(180): {
                        return Atom(74ul, 328022.7857871308, "W");
                    }
                    case(182): {
                        return Atom(74ul, 331671.2861549132, "W");
                    }
                    case(183): {
                        return Atom(74ul, 333497.8550529588, "W");
                    }
                    case(184): {
                        return Atom(74ul, 335322.03414419905, "W");
                    }
                    case(186): {
                        return Atom(74ul, 338974.06180120225, "W");
                    }
                }
            }
            case(75): {
                switch(mass_num) {
                    case(185): {
                        return Atom(75ul, 337148.61215668713, "Re");
                    }
                    case(187): {
                        return Atom(75ul, 340799.48410239, "Re");
                    }
                }
            }
            case(76): {
                switch(mass_num) {
                    case(184): {
                        return Atom(76ul, 335324.8742044606, "Os");
                    }
                    case(186): {
                        return Atom(76ul, 338973.1138991894, "Os");
                    }
                    case(187): {
                        return Atom(76ul, 340799.48410239, "Os");
                    }
                    case(188): {
                        return Atom(76ul, 342622.53664854576, "Os");
                    }
                    case(189): {
                        return Atom(76ul, 344449.617778256, "Os");
                    }
                    case(190): {
                        return Atom(76ul, 346273.05313099385, "Os");
                    }
                    case(192): {
                        return Atom(76ul, 349924.37168437586, "Os");
                    }
                }
            }
            case(77): {
                switch(mass_num) {
                    case(191): {
                        return Atom(77ul, 348099.8608274312, "Ir");
                    }
                    case(193): {
                        return Atom(77ul, 351749.885129988, "Ir");
                    }
                }
            }
            case(78): {
                switch(mass_num) {
                    case(190): {
                        return Atom(78ul, 346275.7692348383, "Pt");
                    }
                    case(192): {
                        return Atom(78ul, 349923.56961344194, "Pt");
                    }
                    case(194): {
                        return Atom(78ul, 353572.3379458318, "Pt");
                    }
                    case(195): {
                        return Atom(78ul, 355399.0745496181, "Pt");
                    }
                    case(196): {
                        return Atom(78ul, 357222.25469796796, "Pt");
                    }
                    case(198): {
                        return Atom(78ul, 360873.3873167244, "Pt");
                    }
                }
            }
            case(79): {
                switch(mass_num) {
                    case(197): {
                        return Atom(79ul, 359048.0907948421, "Au");
                    }
                }
            }
            case(80): {
                switch(mass_num) {
                    case(196): {
                        return Atom(80ul, 357223.85519405885, "Hg");
                    }
                    case(198): {
                        return Atom(80ul, 360871.3438587314, "Hg");
                    }
                    case(199): {
                        return Atom(80ul, 362696.98855231446, "Hg");
                    }
                    case(200): {
                        return Atom(80ul, 364519.96089137683, "Hg");
                    }
                    case(201): {
                        return Atom(80ul, 366346.4514052176, "Hg");
                    }
                    case(202): {
                        return Atom(80ul, 368169.95967349486, "Hg");
                    }
                    case(204): {
                        return Atom(80ul, 371820.93370095297, "Hg");
                    }
                }
            }
            case(81): {
                switch(mass_num) {
                    case(203): {
                        return Atom(81ul, 369995.9507158903, "Tl");
                    }
                    case(205): {
                        return Atom(81ul, 373645.5247649911, "Tl");
                    }
                }
            }
            case(82): {
                switch(mass_num) {
                    case(204): {
                        return Atom(82ul, 371820.1134011342, "Pb");
                    }
                    case(206): {
                        return Atom(82ul, 375468.4825209456, "Pb");
                    }
                    case(207): {
                        return Atom(82ul, 377293.97956056136, "Pb");
                    }
                    case(208): {
                        return Atom(82ul, 379118.24615044886, "Pb");
                    }
                }
            }
            case(83): {
                switch(mass_num) {
                    case(209): {
                        return Atom(83ul, 380947.9649997987, "Bi");
                    }
                }
            }
            case(84): {
                switch(mass_num) {}
            }
            case(85): {
                switch(mass_num) {}
            }
            case(86): {
                switch(mass_num) {}
            }
            case(87): {
                switch(mass_num) {}
            }
            case(88): {
                switch(mass_num) {}
            }
            case(89): {
                switch(mass_num) {}
            }
            case(90): {
                switch(mass_num) {
                    case(230): {
                        return Atom(90ul, 419324.74411970755, "Th");
                    }
                    case(232): {
                        return Atom(90ul, 422979.5079323285, "Th");
                    }
                }
            }
            case(91): {
                switch(mass_num) {
                    case(231): {
                        return Atom(91ul, 421152.64554923656, "Pa");
                    }
                }
            }
            case(92): {
                switch(mass_num) {
                    case(233): {
                        return Atom(92ul, 424805.27658232866, "U");
                    }
                    case(234): {
                        return Atom(92ul, 426630.5530524376, "U");
                    }
                    case(235): {
                        return Atom(92ul, 428458.8737463184, "U");
                    }
                    case(238): {
                        return Atom(92ul, 433940.0442199097, "U");
                    }
                }
            }
            case(93): {
                switch(mass_num) {}
            }
            case(94): {
                switch(mass_num) {}
            }
            case(95): {
                switch(mass_num) {}
            }
            case(96): {
                switch(mass_num) {}
            }
            case(97): {
                switch(mass_num) {}
            }
            case(98): {
                switch(mass_num) {}
            }
            case(99): {
                switch(mass_num) {}
            }
            case(100): {
                switch(mass_num) {}
            }
            case(101): {
                switch(mass_num) {}
            }
            case(102): {
                switch(mass_num) {}
            }
            case(103): {
                switch(mass_num) {}
            }
            case(104): {
                switch(mass_num) {}
            }
            case(105): {
                switch(mass_num) {}
            }
            case(106): {
                switch(mass_num) {}
            }
            case(107): {
                switch(mass_num) {}
            }
            case(108): {
                switch(mass_num) {}
            }
            case(109): {
                switch(mass_num) {}
            }
            case(110): {
                switch(mass_num) {}
            }
            case(111): {
                switch(mass_num) {}
            }
            case(112): {
                switch(mass_num) {}
            }
            case(113): {
                switch(mass_num) {}
            }
            case(114): {
                switch(mass_num) {}
            }
            case(115): {
                switch(mass_num) {}
            }
            case(116): {
                switch(mass_num) {}
            }
            case(117): {
                switch(mass_num) {}
            }
            case(118): {
                switch(mass_num) {}
            }
            default: { throw std::out_of_range("No isotope data"); }
        }
    }

    isotope_list isotopes_(size_type Z) const override {
        switch(Z) {
            case(0): {
                return {};
            }
            case(1): {
                return {
                  1,
                  2,
                };
            }
            case(2): {
                return {
                  3,
                  4,
                };
            }
            case(3): {
                return {
                  6,
                  7,
                };
            }
            case(4): {
                return {
                  9,
                };
            }
            case(5): {
                return {
                  10,
                  11,
                  13,
                };
            }
            case(6): {
                return {};
            }
            case(7): {
                return {
                  14,
                  15,
                };
            }
            case(8): {
                return {
                  16,
                  17,
                  18,
                };
            }
            case(9): {
                return {
                  19,
                };
            }
            case(10): {
                return {
                  20,
                  21,
                  22,
                };
            }
            case(11): {
                return {
                  23,
                };
            }
            case(12): {
                return {
                  24,
                  25,
                  26,
                };
            }
            case(13): {
                return {
                  27,
                };
            }
            case(14): {
                return {
                  28,
                  29,
                  30,
                };
            }
            case(15): {
                return {
                  31,
                };
            }
            case(16): {
                return {
                  32,
                  33,
                  34,
                  36,
                };
            }
            case(17): {
                return {
                  35,
                  37,
                };
            }
            case(18): {
                return {
                  36,
                  38,
                  40,
                };
            }
            case(19): {
                return {
                  39,
                  40,
                  41,
                };
            }
            case(20): {
                return {
                  40, 42, 43, 44, 46, 48,
                };
            }
            case(21): {
                return {
                  45,
                };
            }
            case(22): {
                return {
                  46, 47, 48, 49, 50,
                };
            }
            case(23): {
                return {
                  50,
                  51,
                };
            }
            case(24): {
                return {
                  50,
                  52,
                  53,
                  54,
                };
            }
            case(25): {
                return {
                  55,
                };
            }
            case(26): {
                return {
                  54,
                  56,
                  57,
                  58,
                };
            }
            case(27): {
                return {
                  59,
                };
            }
            case(28): {
                return {
                  58, 60, 61, 62, 64,
                };
            }
            case(29): {
                return {
                  63,
                  65,
                };
            }
            case(30): {
                return {
                  64, 66, 67, 68, 70,
                };
            }
            case(31): {
                return {
                  69,
                  71,
                };
            }
            case(32): {
                return {
                  70, 72, 73, 74, 76,
                };
            }
            case(33): {
                return {
                  75,
                };
            }
            case(34): {
                return {
                  74, 76, 77, 78, 80, 82,
                };
            }
            case(35): {
                return {
                  79,
                  81,
                };
            }
            case(36): {
                return {
                  78, 80, 82, 83, 84, 86,
                };
            }
            case(37): {
                return {
                  85,
                  87,
                };
            }
            case(38): {
                return {
                  84,
                  86,
                  87,
                  88,
                };
            }
            case(39): {
                return {
                  89,
                };
            }
            case(40): {
                return {
                  90, 91, 92, 94, 96,
                };
            }
            case(41): {
                return {
                  93,
                };
            }
            case(42): {
                return {
                  92, 94, 95, 96, 97, 98, 100,
                };
            }
            case(43): {
                return {
                  98,
                };
            }
            case(44): {
                return {
                  96, 98, 99, 100, 101, 102, 104,
                };
            }
            case(45): {
                return {
                  103,
                };
            }
            case(46): {
                return {
                  102, 104, 105, 106, 108, 110,
                };
            }
            case(47): {
                return {
                  107,
                  109,
                };
            }
            case(48): {
                return {
                  106, 108, 110, 111, 112, 113, 114, 116,
                };
            }
            case(49): {
                return {
                  113,
                  115,
                };
            }
            case(50): {
                return {
                  112, 114, 115, 116, 117, 118, 119, 120, 122, 124,
                };
            }
            case(51): {
                return {
                  121,
                  123,
                };
            }
            case(52): {
                return {
                  120, 122, 123, 124, 125, 126, 128, 130,
                };
            }
            case(53): {
                return {
                  127,
                };
            }
            case(54): {
                return {
                  124, 126, 128, 129, 130, 131, 132, 134, 136,
                };
            }
            case(55): {
                return {
                  133,
                };
            }
            case(56): {
                return {
                  130, 132, 134, 135, 136, 137, 138,
                };
            }
            case(57): {
                return {
                  138,
                  139,
                };
            }
            case(58): {
                return {
                  136,
                  138,
                  140,
                  142,
                };
            }
            case(59): {
                return {
                  141,
                };
            }
            case(60): {
                return {
                  142, 143, 144, 145, 146, 148, 150,
                };
            }
            case(61): {
                return {
                  145,
                };
            }
            case(62): {
                return {
                  144, 147, 148, 149, 150, 152, 154,
                };
            }
            case(63): {
                return {
                  151,
                  153,
                };
            }
            case(64): {
                return {
                  152, 154, 155, 156, 157, 158, 160,
                };
            }
            case(65): {
                return {
                  159,
                };
            }
            case(66): {
                return {
                  156, 158, 160, 161, 162, 163, 164,
                };
            }
            case(67): {
                return {
                  165,
                };
            }
            case(68): {
                return {
                  162, 164, 166, 167, 168, 170,
                };
            }
            case(69): {
                return {
                  169,
                };
            }
            case(70): {
                return {
                  168, 170, 171, 172, 173, 174, 176,
                };
            }
            case(71): {
                return {
                  175,
                  176,
                };
            }
            case(72): {
                return {
                  174, 176, 177, 178, 179, 180,
                };
            }
            case(73): {
                return {
                  180,
                  181,
                };
            }
            case(74): {
                return {
                  180, 182, 183, 184, 186,
                };
            }
            case(75): {
                return {
                  185,
                  187,
                };
            }
            case(76): {
                return {
                  184, 186, 187, 188, 189, 190, 192,
                };
            }
            case(77): {
                return {
                  191,
                  193,
                };
            }
            case(78): {
                return {
                  190, 192, 194, 195, 196, 198,
                };
            }
            case(79): {
                return {
                  197,
                };
            }
            case(80): {
                return {
                  196, 198, 199, 200, 201, 202, 204,
                };
            }
            case(81): {
                return {
                  203,
                  205,
                };
            }
            case(82): {
                return {
                  204,
                  206,
                  207,
                  208,
                };
            }
            case(83): {
                return {
                  209,
                };
            }
            case(84): {
                return {};
            }
            case(85): {
                return {};
            }
            case(86): {
                return {};
            }
            case(87): {
                return {};
            }
            case(88): {
                return {};
            }
            case(89): {
                return {};
            }
            case(90): {
                return {
                  230,
                  232,
                };
            }
            case(91): {
                return {
                  231,
                };
            }
            case(92): {
                return {
                  233,
                  234,
                  235,
                  238,
                };
            }
            case(93): {
                return {};
            }
            case(94): {
                return {};
            }
            case(95): {
                return {};
            }
            case(96): {
                return {};
            }
            case(97): {
                return {};
            }
            case(98): {
                return {};
            }
            case(99): {
                return {};
            }
            case(100): {
                return {};
            }
            case(101): {
                return {};
            }
            case(102): {
                return {};
            }
            case(103): {
                return {};
            }
            case(104): {
                return {};
            }
            case(105): {
                return {};
            }
            case(106): {
                return {};
            }
            case(107): {
                return {};
            }
            case(108): {
                return {};
            }
            case(109): {
                return {};
            }
            case(110): {
                return {};
            }
            case(111): {
                return {};
            }
            case(112): {
                return {};
            }
            case(113): {
                return {};
            }
            case(114): {
                return {};
            }
            case(115): {
                return {};
            }
            case(116): {
                return {};
            }
            case(117): {
                return {};
            }
            case(118): {
                return {};
            }
            default: { throw std::out_of_range(" Z > 118"); }
        }
    }
};

std::unique_ptr<PeriodicTablePIMPL> nwx_default_ptable() {
    return std::make_unique<NWXPeriodicTablePIMPL>();
}
} // namespace LibChemist::detail_
