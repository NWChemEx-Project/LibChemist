/*
 * This file was autogenerated by generate_mols.py.  Any edits to it will be
 * lost the next time it is generated.
 */

#include "LibChemist/Implementations/MoleculeManagerPIMPL.hpp"

namespace LibChemist::detail_ {

class HardCodedMolsPIMPL : public MoleculeManagerPIMPL {
public:
    using MoleculeManagerPIMPL::MoleculeManagerPIMPL;

protected:
    HardCodedMolsPIMPL(const HardCodedMolsPIMPL& rhs) = default;

private:
    unique_pimpl clone_() const override {
        using unique_me = std::unique_ptr<HardCodedMolsPIMPL>;
        return unique_me(new HardCodedMolsPIMPL(*this));
    }

    value_type at_(const key_type& name) const override {
        if(name == "water") {
            return Molecule(Atom{ptable_.get_atom(1).coords() =
                                   {
                                     0.0,
                                     2.984338304722454,
                                     4.109397663896704,
                                   }},
                            Atom{ptable_.get_atom(8).coords() =
                                   {
                                     0.0,
                                     0.0,
                                     0.0,
                                   }},
                            Atom{ptable_.get_atom(1).coords() = {
                                   0.0,
                                   2.984338304722454,
                                   -4.109397663896704,
                                 }});
        } else
            throw std::out_of_range("Unknown molecule name");
    } // end at_
};    // end HardCodedMolsPIMPL

std::unique_ptr<MoleculeManagerPIMPL> nwx_default_mols() {
    return std::make_unique<HardCodedMolsPIMPL>();
}

} // namespace LibChemist::detail_
