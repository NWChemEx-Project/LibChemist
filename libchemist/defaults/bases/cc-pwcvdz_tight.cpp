/*
 * This file is autogenerated by generate_basis.py.  Any modifications made in
 * this file will be lost next time generate_basis.py is run.
 */

#include "libchemist/defaults/nwx_basis_list.hpp"

namespace libchemist::detail_ {

Center<double> cc_dash_pwcvdz_tight(std::size_t Z) {
    switch(Z) {
        case(5): {
            Center<double> rv(0.0, 0.0, 0.0);
            rv.add_shell(ShellType::pure, 0, std::vector<double>{1.0000000},
                         std::vector<double>{2.4630000});
            rv.add_shell(ShellType::pure, 1, std::vector<double>{1.0000000},
                         std::vector<double>{4.5660000});
            return rv;
        } // End case
        case(6): {
            Center<double> rv(0.0, 0.0, 0.0);
            rv.add_shell(ShellType::pure, 0, std::vector<double>{1.0000000},
                         std::vector<double>{3.3390000});
            rv.add_shell(ShellType::pure, 1, std::vector<double>{1.0000000},
                         std::vector<double>{7.2350000});
            return rv;
        } // End case
        case(7): {
            Center<double> rv(0.0, 0.0, 0.0);
            rv.add_shell(ShellType::pure, 0, std::vector<double>{1.0000000},
                         std::vector<double>{4.3200000});
            rv.add_shell(ShellType::pure, 1, std::vector<double>{1.0000000},
                         std::vector<double>{10.2390000});
            return rv;
        } // End case
        case(8): {
            Center<double> rv(0.0, 0.0, 0.0);
            rv.add_shell(ShellType::pure, 0, std::vector<double>{1.0000000},
                         std::vector<double>{5.4590000});
            rv.add_shell(ShellType::pure, 1, std::vector<double>{1.0000000},
                         std::vector<double>{13.3200000});
            return rv;
        } // End case
        case(9): {
            Center<double> rv(0.0, 0.0, 0.0);
            rv.add_shell(ShellType::pure, 0, std::vector<double>{1.0000000},
                         std::vector<double>{6.7240000});
            rv.add_shell(ShellType::pure, 1, std::vector<double>{1.0000000},
                         std::vector<double>{16.8030000});
            return rv;
        } // End case
        case(10): {
            Center<double> rv(0.0, 0.0, 0.0);
            rv.add_shell(ShellType::pure, 0, std::vector<double>{1.0000000},
                         std::vector<double>{8.1160000});
            rv.add_shell(ShellType::pure, 1, std::vector<double>{1.0000000},
                         std::vector<double>{20.6580000});
            return rv;
        } // End case
        case(13): {
            Center<double> rv(0.0, 0.0, 0.0);
            rv.add_shell(ShellType::pure, 0, std::vector<double>{1.0000000},
                         std::vector<double>{3.5990000});
            rv.add_shell(ShellType::pure, 1, std::vector<double>{1.0000000},
                         std::vector<double>{0.9280000});
            rv.add_shell(ShellType::pure, 2, std::vector<double>{1.0000000},
                         std::vector<double>{1.7920000});
            return rv;
        } // End case
        case(14): {
            Center<double> rv(0.0, 0.0, 0.0);
            rv.add_shell(ShellType::pure, 0, std::vector<double>{1.0000000},
                         std::vector<double>{4.4990000});
            rv.add_shell(ShellType::pure, 1, std::vector<double>{1.0000000},
                         std::vector<double>{1.3880000});
            rv.add_shell(ShellType::pure, 2, std::vector<double>{1.0000000},
                         std::vector<double>{2.2770000});
            return rv;
        } // End case
        case(15): {
            Center<double> rv(0.0, 0.0, 0.0);
            rv.add_shell(ShellType::pure, 0, std::vector<double>{1.0000000},
                         std::vector<double>{5.4740000});
            rv.add_shell(ShellType::pure, 1, std::vector<double>{1.0000000},
                         std::vector<double>{1.9390000});
            rv.add_shell(ShellType::pure, 2, std::vector<double>{1.0000000},
                         std::vector<double>{2.7600000});
            return rv;
        } // End case
        case(16): {
            Center<double> rv(0.0, 0.0, 0.0);
            rv.add_shell(ShellType::pure, 0, std::vector<double>{1.0000000},
                         std::vector<double>{6.5010000});
            rv.add_shell(ShellType::pure, 1, std::vector<double>{1.0000000},
                         std::vector<double>{2.5030000});
            rv.add_shell(ShellType::pure, 2, std::vector<double>{1.0000000},
                         std::vector<double>{3.2110000});
            return rv;
        } // End case
        case(17): {
            Center<double> rv(0.0, 0.0, 0.0);
            rv.add_shell(ShellType::pure, 0, std::vector<double>{1.0000000},
                         std::vector<double>{7.5910000});
            rv.add_shell(ShellType::pure, 1, std::vector<double>{1.0000000},
                         std::vector<double>{3.0920000});
            rv.add_shell(ShellType::pure, 2, std::vector<double>{1.0000000},
                         std::vector<double>{3.7010000});
            return rv;
        } // End case
        case(18): {
            Center<double> rv(0.0, 0.0, 0.0);
            rv.add_shell(ShellType::pure, 0, std::vector<double>{1.0000000},
                         std::vector<double>{8.7420000});
            rv.add_shell(ShellType::pure, 1, std::vector<double>{1.0000000},
                         std::vector<double>{3.7110000});
            rv.add_shell(ShellType::pure, 2, std::vector<double>{1.0000000},
                         std::vector<double>{4.2510000});
            return rv;
        } // End case
        default: { throw std::out_of_range("Basis not available for Z"); }
    } // end switch

} // end function
} // namespace libchemist::detail_