/*
 * This file was autogenerated by generate_mols.py. Any edits to it will be
 * lost the next time it is generated.
 */

#include "libchemist/detail_/molecule_manager_pimpl.hpp"

namespace libchemist::detail_ {

class HardCodedMolsPIMPL : public MoleculeManagerPIMPL {
public:
    using MoleculeManagerPIMPL::MoleculeManagerPIMPL;

protected:
    HardCodedMolsPIMPL(const HardCodedMolsPIMPL& rhs) = default;

private:
    unique_pimpl clone_() const override {
        using unique_me = std::unique_ptr<HardCodedMolsPIMPL>;
        return unique_me(new HardCodedMolsPIMPL(*this));
    }

    value_type at_(const key_type& name) const override {
        using cart_t = typename Atom::coord_type;
        using mass_t = typename Atom::mass_type;
        if(name == "tetrahydrofuran") {
            return Molecule(Atom{mass_t(ptable_.get_atom(6).mass()), 6ul,
                                 cart_t{0.29611852299784575, 2.4598435315015688,
                                        -0.00680297819267546}},
                            Atom{mass_t(ptable_.get_atom(6).mass()), 6ul,
                                 cart_t{-2.144449903624476, 0.913677765599607,
                                        0.10393438905476399}},
                            Atom{mass_t(ptable_.get_atom(8).mass()), 8ul,
                                 cart_t{-1.544653992970256, -1.6880834498658301,
                                        -0.19048338939491288}},
                            Atom{mass_t(ptable_.get_atom(6).mass()), 6ul,
                                 cart_t{1.099814807815866, -2.0550663290373787,
                                        0.1041233606712272}},
                            Atom{mass_t(ptable_.get_atom(6).mass()), 6ul,
                                 cart_t{2.423938924373559, 0.512491023848218,
                                        -0.011905211837182055}},
                            Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                                 cart_t{0.44313844060622093, 3.7680940322763523,
                                        1.6136286329793266}},
                            Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                                 cart_t{0.3581012131977777, 3.6669942174685364,
                                        -1.7096262141426357}},
                            Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                                 cart_t{-3.484825579198005, 1.3483124834649838,
                                        -1.4291923353112364}},
                            Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                                 cart_t{-3.152424505839223, 1.1277826070524208,
                                        1.9180619071015532}},
                            Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                                 cart_t{1.6508560414225786, -3.3546241354548547,
                                        -1.4267357042972146}},
                            Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                                 cart_t{1.4029252806228505, -3.036584904947277,
                                        1.9197626516497224}},
                            Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                                 cart_t{3.6127593635435957, 0.6814316489663252,
                                        -1.7202086246645756}},
                            Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                                 cart_t{3.7216070146264033, 0.7742167126497601,
                                        1.6024793076079973}});
        } else if(name == "acetic_acid") {
            return Molecule(
              Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                   cart_t{3.76677123096111, -0.13152424505839222,
                          1.3443440795192563}},
              Atom{mass_t(ptable_.get_atom(6).mass()), 6ul,
                   cart_t{2.7629540043085528, -0.2570013983899619,
                          -0.4669488642805851}},
              Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                   cart_t{3.3961978910767603, 1.3245020597906194,
                          -1.651422956271968}},
              Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                   cart_t{3.327979137533543, -2.0231301258550967,
                          -1.3953664159643222}},
              Atom{mass_t(ptable_.get_atom(6).mass()), 6ul,
                   cart_t{-0.036471521977399, -0.15968101591141012,
                          -0.072943043954798}},
              Atom{mass_t(ptable_.get_atom(8).mass()), 8ul,
                   cart_t{-1.6355493404890586, -1.7181299368834801,
                          -0.6300313692883329}},
              Atom{mass_t(ptable_.get_atom(8).mass()), 8ul,
                   cart_t{-0.9025284402282778, 1.964926867984429,
                          1.0642881439207832}},
              Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                   cart_t{-2.6907668468196078, 1.8789447824936696,
                          1.24381117956083}});
        } else if(name == "methane") {
            return Molecule(Atom{mass_t(ptable_.get_atom(6).mass()), 6ul,
                                 cart_t{-1.462885974526626, 0.24657016516119282,
                                        -3.428852186401603}},
                            Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                                 cart_t{0.5591103216296913, 0.24657016516119282,
                                        -3.428852186401603}},
                            Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                                 cart_t{-2.300899504894365, -0.9465777240258513,
                                        -4.829793265051589}},
                            Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                                 cart_t{-2.1339430817491216, 2.1386106806757628,
                                        -3.670320117918289}},
                            Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                                 cart_t{-2.021372689821989, -0.5143807400128501,
                                        -1.6406893684568578}});
        } else if(name == "benzene") {
            return Molecule(
              Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                   cart_t{-0.40558978041498167, 1.8488416039910807,
                          0.6261763483124835}},
              Atom{mass_t(ptable_.get_atom(6).mass()), 6ul,
                   cart_t{-0.7242337200952417, 1.2532030688990514,
                          -1.3291129672323216}},
              Atom{mass_t(ptable_.get_atom(6).mass()), 6ul,
                   cart_t{-2.977285611701123, 0.07235723194376205,
                          -1.9927056956045204}},
              Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                   cart_t{-4.431648966325258, -0.26142333421520086,
                          -0.559922899580483}},
              Atom{mass_t(ptable_.get_atom(6).mass()), 6ul,
                   cart_t{-3.3822706829434224, -0.6847008579311388,
                          -4.477398994671001}},
              Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                   cart_t{-5.1551267999546475, -1.6140632676971918,
                          -4.999546468120489}},
              Atom{mass_t(ptable_.get_atom(6).mass()), 6ul,
                   cart_t{-1.534449525681243, -0.26095090517404285,
                          -6.29861294833516}},
              Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                   cart_t{-1.853169054008088, -0.8567028232359499,
                          -8.253788880910088}},
              Atom{mass_t(ptable_.get_atom(6).mass()), 6ul,
                   cart_t{0.7185834687629918, 0.9197815488113685,
                          -5.634982425639669}},
              Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                   cart_t{2.1727200574473713, 1.2530140972825883,
                          -7.068010884765108}},
              Atom{mass_t(ptable_.get_atom(6).mass()), 6ul,
                   cart_t{1.1236252314902302, 1.676877433009562,
                          -3.150308023734835}},
              Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                   cart_t{2.896481348501455, 2.6060319739975055,
                          -2.6280282701538233}});
        } else if(name == "water") {
            return Molecule(
              Atom{mass_t(ptable_.get_atom(8).mass()), 8ul,
                   cart_t{0.0, -0.1432223429807816, 0.0}},
              Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                   cart_t{1.6380335020342418, 1.1365568803584036, 0.0}},
              Atom{mass_t(ptable_.get_atom(1).mass()), 1ul,
                   cart_t{-1.6380335020342418, 1.1365568803584036, 0.0}});
        } else
            throw std::out_of_range("Unknown molecule name");
    } // end at_
};    // end HardCodedMolsPIMPL

std::unique_ptr<MoleculeManagerPIMPL> nwx_default_mols() {
    return std::make_unique<HardCodedMolsPIMPL>();
}

} // namespace libchemist::detail_
